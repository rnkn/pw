.Dd $Mdocdate$
.Dt PW 1
.Os
.Sh NAME
.Nm pw
.Nd POSIX shell password manager
.Sh SYNOPSIS
.Nm
.Op Cm command
.Op Fl flags
.Op Ar entry
.Nm
.Op Cm command
.Fl h
.Nm
.Fl E
.Nm
.Fl v
.Sh DESCRIPTION
.Bl -tag
.It Cm init
Initialize RSA key pair.
Keys are created in locations specified by environment variables
.Ev PW_PRIVATE_KEY
and
.Ev PW_PUBLIC_KEY
.Pq see Sx ENVIRONMENT .
.It Cm ls | Cm list Op query
List entries matching
.Op query
or list all.
.It Cm add Oo Fl fsv Oc Ar entry
Add
.Ar entry
from
.Pa /dev/stdin
or prompt for multiline text. Text entry is terminated with
.Aq control-D
on an empty line.
.Bl -tag -compact
.It Fl f
force, overwrite existing
.Ar entry
.It Fl s
create signature of
.Ar entry
with private key
.It Fl v
verify signature of
.Ar entry
with public key
.El
.It Cm show Oo Fl cv Oc Oo Fl t Oc Oo Fl k Ar field Oc Ar entry
Decrypt and show
.Ar entry .
.Bl -tag -compact
.It Fl c
redirect output to
.Ev PW_CLIP
.It Fl v
verify signature of
.Ar entry
with public key
.It Fl t
show
.Ar entry
TOTP
.Pq requires Xr oathtool 1
.It Fl k Ar field
show value of
.Ar field
for
.Ar entry
.El
.It Cm ed | Cm edit Ar entry
Temporarily decrypt
.Ar entry
and edit in
.Ev EDITOR .
.It Cm gen | Cm generate Op length
Generate random password of
.Op length
.Pq default 16 .
.It Cm sign Ar entry
Create signature of
.Ar entry
with private key.
.It Cm verify Ar entry
Verify signature of
.Ar entry
with public key.
.It Cm git Ar arguments
Call git and pass
.Ar arguments
verbatim.
.It Cm master
Change private key passphrase
.Pq or Dq master password .
.It Oo Cm command Oc Fl h
Print usage, or print usage for
.Cm command .
.It Fl E
Print configuration environment variables
.Pq see Sx ENVIRONMENT .
.It Fl v
Print program version.
.El
.Ss Avoiding retyping your master password
Before prompting for the private key passphrase,
.Nm
checks if environment variable
.Ev PW_MASTER
is set, and if so, uses the value of this.
This can help you avoid retyping your
.Dq master password
every time.
.Pp
For convenience, you can set the following aliases in your
.Pa .profile :
.Bd -literal -offset Ds
alias pw_unlock="stty -echo; read -r PW_MASTER; stty echo; export PW_MASTER"
alias pw_lock="unset PW_MASTER"
.Ed
.Pp
These are also provided in
.Pa pw_alias.sh ,
allowing you to instead just source by adding the following:
.Pp
.Dl . ./pw_alias.sh
.Sh ENVIRONMENT
All
.Nm
configuration is accomplished via environment variables:
.Bl -tag
.It Ev PW_DIR
Location of password directory
.Pq defaults to Pa $HOME/.pw .
.It Ev PW_PRIVATE_KEY
Location of private key
.Pq defaults to Pa $HOME/.keys/pw.sec .
.It Ev PW_PUBLIC_KEY
Location of public key
.Pq defaults to Pa $HOME/.keys/pw.pub .
.It Ev PW_SIGN
When set, create signatures for entry tarballs with private key.
.It Ev PW_VERIFY
When set, verify signatures of entry tarballs with public key.
.It Ev PW_CLIP
Clipboard command. Must be set for
.Fl c
to work.
.It Ev PW_MASTER
Private key passphrase.
.El
.\" .Sh FILES
.Sh EXIT STATUS
.Nm
exits 0 on success and > 0 on error.
.Sh EXAMPLES
To add a generated password:
.Pp
.Dl $ pw generate | pw add example.com
.Pp
To generate a new password for an existing entry in-place:
.Pp
.Bd -literal -offset Ds
$ pw show example.com | sed "1d; i\\\\
> $(pw generate)
> " | pw add -f example.com
.Ed
.Pp
Set git to perform binary diffs:
.Pp
.Bd -literal -offset Ds
$ cd .pw
$ cat > .gitattributes
> *.tar diff=
> *.tar.sig diff=
.Ed
.Pp
To import from
.Nm password-store :
.Pp
.Bd -literal -offset Ds
$ pw_unlock
$ cd $HOME/.password-store
$ for file in *.gpg; do
>	entry="${file%.gpg}"
>	pass "$entry" | sed -E 's/^otpauth:.*secret=([A-Za-z2-7]+).*/totp: \\1/' |
>		pw add "$entry"
> done
.Ed
.Pp
To batch edit all entries, e.g. to change an email:
.Pp
.Bd -literal -offset Ds
$ pw_unlock
$ pw ls | while read -r entry; do
>	pw show "$entry" | sed 's/@example\\.com/@newaddress.com/' |
>		pw add -f "$entry"
> done
.Ed
.Pp
To rotate your private key:
.Pp
.Bd -literal -offset Ds
$ tar -cvf keybackup.tar $HOME/.keys
$ PW_PRIVATE_KEY=$HOME/.keys/newkey.sec \\
> PW_PUBLIC_KEY=$HOME/.keys/newkey.pub \\
> pw init
$ mkdir $HOME/.pw_new
$ pw_unlock
$ pw ls | while read -r entry; do
>	pw show "$entry" |
>		PW_PUBLIC_KEY=$HOME/.keys/newkey.pub \\
>		PW_DIR=$HOME/.pw_new \\
>		pw add "$entry"
> done
$ mv $HOME/.keys/{newkey,pw}.sec
$ mv $HOME/.keys/{newkey,pw}.pub
$ rm -rf $HOME/.pw
$ mv $HOME/.pw_new $HOME/.pw
.Ed
.Pp
.Sh SEE ALSO
.Xr openssl 1 ,
.Xr random 4 ,
.Xr oathtool 1 ,
.Xr pass 1
.\" .Sh STANDARDS
.\" .Sh HISTORY
.Sh AUTHOR
.An Paul W. Rankin
.Mt pwr@bydasein.com
.\" .Sh CAVEATS
.\" .Sh BUGS
.\" .Sh SECURITY CONSIDERATIONS
